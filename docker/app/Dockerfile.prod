FROM node:12.19-alpine as builder

WORKDIR /app

ENV DOCKERIZE_VERSION v0.6.1
RUN apk add --no-cache openssl \
  && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# Installing bash.
RUN apk add --no-cache bash bash-doc bash-completion

RUN apk add --no-cache --virtual .gyp \
  python \
  make \
  g++ \
  && npm install \
  && apk del .gyp \
  && mkdir -p ~/.ssh \
  && rm -rf package-lock.json

# Installing git
RUN apk add --no-cache git

# Installing ssh
RUN apk add --no-cache openssh-client

COPY . .
# COPY $SSH_PRIVATE_KEY_FILE ~/.ssh/id_rsa
RUN echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa \
  && chmod 600 ~/.ssh/id_rsa 
  # && eval $(ssh-agent -s) \
  # && ssh-add ~/.ssh/id_rsa \
  # && ssh-keyscan -H $CI_SSH_SERVER >> ~/.ssh/known_hosts 
RUN yarn cache clean

RUN yarn && yarn build

FROM node:12.19-alpine

WORKDIR /app

ENV DOCKERIZE_VERSION v0.6.1
RUN apk add --no-cache openssl \
  && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# Installing bash.
RUN apk add --no-cache bash bash-doc bash-completion

RUN apk add --no-cache --virtual .gyp \
  python \
  make \
  g++ \
  && npm install \
  && apk del .gyp \
  && mkdir -p ~/.ssh \
  && rm -rf package-lock.json

# Installing git
RUN apk add --no-cache git

# Installing ssh
RUN apk add --no-cache openssh-client

COPY --from=builder /app/dist ./dist
# COPY $SSH_PRIVATE_KEY_FILE ~/.ssh/id_rsa
RUN echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa \
  && chmod 600 ~/.ssh/id_rsa 
  # && eval $(ssh-agent -s) \
  # && ssh-add ~/.ssh/id_rsa \
  # && ssh-keyscan -H $CI_SSH_SERVER >> ~/.ssh/known_hosts 
# RUN yarn cache clean
RUN yarn install --production=true

RUN rm -rf ~/.ssh/id_rsa

EXPOSE 5000

CMD ["yarn", "start"]