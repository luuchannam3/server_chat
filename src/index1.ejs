<!doctype html>
<html>

<head>
  <title>Socket.IO chat</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font: 13px Helvetica, Arial;
    }

    form {
      background: #000;
      padding: 3px;
      position: relative;
      bottom: 0;
      width: 100%;
    }

    form input {
      border: 0;
      padding: 10px;
      width: 90%;
      margin-right: 0.5%;
    }

    form button {
      width: 9%;
      background: rgb(130, 224, 255);
      border: none;
      padding: 10px;
    }

    #messages {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    #messages li {
      padding: 5px 10px;
    }

    #messages li:nth-child(odd) {
      background: #eee;
    }
  </style>
  <script type="text/javascript"
    src="https://cdn.jsdelivr.net/npm/browser-image-compression@latest/dist/browser-image-compression.js"></script>
</head>

<body>
  <ul>
    <% for(var i=0;i<listMessage.length;i++){ %>
    <li><span><%= listMessage[i].isSender%></span><span> </span><span><%= listMessage[i].Content%></span></span>
    </li>
    <% } %>
  </ul>
  <ul id="messages"></ul>
  <form action="/" id="chat" method="POST">
    <input id="m" autocomplete="off" /><input type="submit" value="Send" />
    <input type="file" id="uploadfile" />
  </form>
  <p id="type"></p>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <script>
    $(function () {
      var socket = io()
      var conversation_id = '<%= conversation_id %>'
      socket.emit('joinroom',conversation_id)
      $('#chat').submit(function (e) {
        var id_sender = '<%= id_sender %>'
        conversation_id = '<%= conversation_id %>'
        e.preventDefault()
        var message = $('#m').val()
        var data = { id_sender: id_sender, conversation_id: conversation_id, message: message};
        socket.emit('chat message', data)
        $('#m').val()
        $('#text').val()
        return false
      })
      socket.on('chat message', function (msg) {
        $('#messages').append($('<li>').text(msg))
      })
      $('#uploadfile').bind('change', async function (event) {
        const imageFile = event.target.files[0];
        const options = {
          maxSizeMB: 0.2,
          maxWidthOrHeight: 600,
          useWebWorker: true
        }
        try {
          const compressedFile = await imageCompression(imageFile, options);
          await readThenSendFile(compressedFile);
        } catch (error) {
          console.log(error);
          await readThenSendFile(imageFile);
        }
      });
      function readThenSendFile(data) {
        var reader = new FileReader();
        reader.onload = function (evt) {
          var msg = {};
          var id_sender = '<%= id_sender %>'
          var conversation_id = '<%= conversation_id %>'
          msg.id_sender = id_sender;
          msg.file = evt.target.result;
          msg.conversation_id = conversation_id;
          socket.emit('base64 file', msg);
        };
        reader.readAsDataURL(data);
        reader.onerror = function () {
          alert("Could not read the file: large file size");
        };
      }
      socket.on('base64_file', (msg) => {
        if (msg.you == undefined) { $('#messages').append($('<li>').html(`<p class="id_sender">${msg.id_sender}</p><img class="imgupload" src="${msg.file}" style="width: 400px; height: 400px;"/>`)); }
        else if (msg.id_sender == undefined) {
          $('#messages').append($('<li>').html(`<p class="id_sender">${msg.you}</p><img class="imgupload" src="${msg.file}" style="width: 400px; height: 400px;"/>`));
        }
      })
    })
  </script>
</body>

</html>
