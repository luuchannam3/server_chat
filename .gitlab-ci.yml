stages:
  - build
  - test
  - deploy
docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -f ./docker/app/Dockerfile.prod -t harbor.zinza.com.vn/medical/chat/socket-server .
    - docker push harbor.zinza.com.vn/medical/chat/socket-server
test_server:
  image: harbor.zinza.com.vn/medical/chat/socket-server
  stage: test
  services:
    - mongo:4.2.0-bionic
  variables:
    MONGO_URI: 'mongodb://localhost:27017/Medical'
  before_script:
    - npm install
  script:
    - npm run test
    - npx eslint ./
deploy_app:
  stage: deploy
  image: alpine:latest
  services:
    - docker:dind
  before_script:
    - apk add openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $CI_SSH_SERVER >> ~/.ssh/known_hosts
  script:
    - ssh $CI_SSH_USER@$CI_SSH_SERVER docker-compose -f /home/channam/Desktop/nam/api-socket-server/socket-server/docker-compose.yml down
    - ssh $CI_SSH_USER@$CI_SSH_SERVER docker-compose -f /home/channam/Desktop/nam/api-socket-server/socket-server/docker-compose.yml up -d
